name: PR Build

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  changes:
    name: 변경사항 감지
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 경로 필터링
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'api/**'
              - 'batch/**'
              - 'external/**'
              - 'newsletter/**'
              - 'build.gradle.kts'
              - 'gradle/**'
              - 'settings.gradle.kts'

  ktlint:
    name: Ktlint 검사
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Ktlint 실행
        run: ./gradlew ktlintCheck --no-daemon --build-cache

  test:
    name: 테스트
    runs-on: ubuntu-22.04
    needs: changes
    if: needs.changes.outputs.backend == 'true'

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})' --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle 설정
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
            wrapper
          gradle-home-cache-excludes: |
            caches/journal-1
            caches/transforms-*/results.bin

      - name: 테스트 실행
        run: |
          ./gradlew test \
            --no-daemon \
            --parallel \
            --max-workers=2 \
            --build-cache \
            --continue
        env:
          SPRING_DATA_MONGODB_URI: mongodb://localhost:27017/newsletter
          SPRING_PROFILES_ACTIVE: test
          CI: true
          GITHUB_ACTIONS: true
          GRADLE_OPTS: "-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError"

      - name: 테스트 결과 업로드
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: |
            */build/test-results/
            */build/reports/tests/
          retention-days: 1
