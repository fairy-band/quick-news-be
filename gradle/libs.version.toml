[versions]
# Core versions
kotlin = "2.2.0"
java = "21"

# Spring versions
spring-boot = "3.5.3"
spring-dependency-management = "1.1.7"
spring-integration = "6.2.0"
kotlin-coroutines = "1.8.0"

# Library versions
jackson = "2.17.0"
jakarta-activation = "2.1.2"
junit = "5.10.0"
google-genai = "1.0.0"
gson = "2.10.1"
jsoup = "1.17.2"
mockk = "1.13.8"
micrometer = "1.13.2"
mongodb = "5.3.0"
springdoc-openapi = "2.8.9"
rest-assured = "5.4.0"
postgresql = "42.7.2"
h2 = "2.2.224"
thymeleaf = "3.1.2.RELEASE"
firebase-admin = "9.2.0"

# Code Quality
ktlint = "12.1.1"

[libraries]
# Spring Boot starters
spring-web = { group = "org.springframework", name = "spring-web" }
spring-boot-starter = { group = "org.springframework.boot", name = "spring-boot-starter" }
spring-boot-starter-web = { group = "org.springframework.boot", name = "spring-boot-starter-web" }
spring-boot-starter-mail = { group = "org.springframework.boot", name = "spring-boot-starter-mail" }
spring-boot-starter-data-jpa = { group = "org.springframework.boot", name = "spring-boot-starter-data-jpa" }
spring-boot-starter-jdbc = { group = "org.springframework.boot", name = "spring-boot-starter-jdbc" }
spring-boot-starter-logging = { group = "org.springframework.boot", name = "spring-boot-starter-logging" }
spring-boot-starter-integration = { group = "org.springframework.boot", name = "spring-boot-starter-integration" }
spring-boot-configuration-processor = { group = "org.springframework.boot", name = "spring-boot-configuration-processor" }
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
spring-boot-starter-aop = { group = "org.springframework.boot", name = "spring-boot-starter-aop" }
spring-boot-starter-data-mongodb = { group = "org.springframework.boot", name = "spring-boot-starter-data-mongodb" }
spring-boot-starter-thymeleaf = { group = "org.springframework.boot", name = "spring-boot-starter-thymeleaf" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security" }
spring-boot-starter-oauth2-client = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-client" }

# Spring Integration
spring-integration-core = { group = "org.springframework.integration", name = "spring-integration-core", version.ref = "spring-integration" }
spring-integration-mail = { group = "org.springframework.integration", name = "spring-integration-mail", version.ref = "spring-integration" }
spring-integration-http = { group = "org.springframework.integration", name = "spring-integration-http", version.ref = "spring-integration" }

# Kotlin
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect" }
kotlin-stdlib-jdk8 = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk8" }
kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlin-coroutines" }

# Jackson
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }

# Jakarta
jakarta-activation-api = { group = "jakarta.activation", name = "jakarta.activation-api", version.ref = "jakarta-activation" }

# Google  AI
google-genai = { group = "com.google.genai", name = "google-genai", version.ref = "google-genai" }

# Firebase
firebase-admin = { group = "com.google.firebase", name = "firebase-admin", version.ref = "firebase-admin" }

# Gson
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# JSoup
jsoup = { group = "org.jsoup", name = "jsoup", version.ref = "jsoup" }

# RSS
rome = { group = "com.rometools", name = "rome", version = "2.1.0" }

# Micrometer
micrometer-core = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometer" }

# MongoDB
mongodb-driver-sync = { group = "org.mongodb", name = "mongodb-driver-sync", version.ref = "mongodb" }

# Database
postgresql = { group = "org.postgresql", name = "postgresql", version.ref = "postgresql" }
h2 = { group = "com.h2database", name = "h2", version.ref = "h2" }

# Springdoc OpenAPI (Swagger)
springdoc-openapi-starter-webmvc-ui = { group = "org.springdoc", name = "springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }

# Test dependencies
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
spring-boot-starter-security-test = { group = "org.springframework.boot", name = "spring-boot-starter-security-test" }
spring-integration-test = { group = "org.springframework.integration", name = "spring-integration-test" }
kotlin-test-junit5 = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit5" }
junit-platform-launcher = { group = "org.junit.platform", name = "junit-platform-launcher" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
de-flapdoodle-embed-mongo-spring = { group = "de.flapdoodle.embed", name = "de.flapdoodle.embed.mongo.spring30x", version = "4.11.0" }
rest-assured = { group = "io.rest-assured", name = "rest-assured", version.ref = "rest-assured" }
rest-assured-kotlin = { group = "io.rest-assured", name = "kotlin-extensions", version.ref = "rest-assured" }

[bundles]
# Spring Boot web bundle (for API module)
spring-boot-web = [
    "spring-boot-starter",
    "spring-boot-starter-web",
    "jackson-module-kotlin",
    "kotlin-reflect"
]

# Spring Boot data bundle (for API module)
spring-boot-data = [
    "spring-boot-starter-data-jpa",
    "spring-boot-starter-jdbc"
]

# Spring Boot batch bundle (통합된 batch + mail 기능)
spring-boot-batch = [
    "spring-boot-starter-integration",
    "spring-boot-starter-mail",
    "spring-boot-starter-web",
    "jackson-module-kotlin",
    "kotlin-reflect",
    "spring-integration-core",
    "spring-integration-mail",
    "spring-integration-http",
    "kotlin-coroutines-core",
    "kotlin-coroutines-reactor",
    "spring-boot-starter-actuator",
    "spring-boot-starter-aop",
]

# Test bundle
testing = [
    "spring-boot-starter-test",
    "kotlin-test-junit5",
    "junit-platform-launcher",
    "mockk",
    "rest-assured",
    "rest-assured-kotlin"
]

[plugins]
# Kotlin plugins
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }

# Spring plugins
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

# Code Quality
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
